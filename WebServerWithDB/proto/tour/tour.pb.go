// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: tour.proto

package tour

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TourDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PublishedDateTime   *timestamppb.Timestamp   `protobuf:"bytes,3,opt,name=publishedDateTime,proto3" json:"publishedDateTime,omitempty"`
	ArchivedDateTime    *timestamppb.Timestamp   `protobuf:"bytes,4,opt,name=archivedDateTime,proto3" json:"archivedDateTime,omitempty"`
	Description         string                   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	DifficultyLevel     string                   `protobuf:"bytes,6,opt,name=difficultyLevel,proto3" json:"difficultyLevel,omitempty"`
	Tags                []string                 `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Price               int32                    `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	Status              string                   `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	UserId              int64                    `protobuf:"varint,10,opt,name=userId,proto3" json:"userId,omitempty"`
	TourPoints          []*TourPointDto          `protobuf:"bytes,11,rep,name=tourPoints,proto3" json:"tourPoints,omitempty"`
	TourCharacteristics []*TourCharacteristicDto `protobuf:"bytes,12,rep,name=tourCharacteristics,proto3" json:"tourCharacteristics,omitempty"`
	TourReviews         []*TourReviewDto         `protobuf:"bytes,13,rep,name=tourReviews,proto3" json:"tourReviews,omitempty"`
}

func (x *TourDto) Reset() {
	*x = TourDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourDto) ProtoMessage() {}

func (x *TourDto) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourDto.ProtoReflect.Descriptor instead.
func (*TourDto) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{0}
}

func (x *TourDto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TourDto) GetPublishedDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedDateTime
	}
	return nil
}

func (x *TourDto) GetArchivedDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArchivedDateTime
	}
	return nil
}

func (x *TourDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourDto) GetDifficultyLevel() string {
	if x != nil {
		return x.DifficultyLevel
	}
	return ""
}

func (x *TourDto) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TourDto) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TourDto) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TourDto) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TourDto) GetTourPoints() []*TourPointDto {
	if x != nil {
		return x.TourPoints
	}
	return nil
}

func (x *TourDto) GetTourCharacteristics() []*TourCharacteristicDto {
	if x != nil {
		return x.TourCharacteristics
	}
	return nil
}

func (x *TourDto) GetTourReviews() []*TourReviewDto {
	if x != nil {
		return x.TourReviews
	}
	return nil
}

type TourPointDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TourId      int64   `protobuf:"varint,2,opt,name=tourId,proto3" json:"tourId,omitempty"`
	Name        string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Latitude    float64 `protobuf:"fixed64,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float64 `protobuf:"fixed64,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	ImageUrl    string  `protobuf:"bytes,7,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	Secret      string  `protobuf:"bytes,8,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *TourPointDto) Reset() {
	*x = TourPointDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourPointDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourPointDto) ProtoMessage() {}

func (x *TourPointDto) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourPointDto.ProtoReflect.Descriptor instead.
func (*TourPointDto) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{1}
}

func (x *TourPointDto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourPointDto) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *TourPointDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TourPointDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourPointDto) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *TourPointDto) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *TourPointDto) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *TourPointDto) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type TourCharacteristicDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distance      float64 `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	Duration      float64 `protobuf:"fixed64,2,opt,name=duration,proto3" json:"duration,omitempty"`
	TransportType string  `protobuf:"bytes,3,opt,name=transportType,proto3" json:"transportType,omitempty"`
}

func (x *TourCharacteristicDto) Reset() {
	*x = TourCharacteristicDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourCharacteristicDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourCharacteristicDto) ProtoMessage() {}

func (x *TourCharacteristicDto) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourCharacteristicDto.ProtoReflect.Descriptor instead.
func (*TourCharacteristicDto) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{2}
}

func (x *TourCharacteristicDto) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *TourCharacteristicDto) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *TourCharacteristicDto) GetTransportType() string {
	if x != nil {
		return x.TransportType
	}
	return ""
}

type TourReviewDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Grade          float64                `protobuf:"fixed64,2,opt,name=grade,proto3" json:"grade,omitempty"`
	Comment        string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	TouristId      int64                  `protobuf:"varint,4,opt,name=touristId,proto3" json:"touristId,omitempty"`
	AttendanceDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=attendanceDate,proto3" json:"attendanceDate,omitempty"`
	ReviewDate     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=reviewDate,proto3" json:"reviewDate,omitempty"`
	Images         []string               `protobuf:"bytes,7,rep,name=images,proto3" json:"images,omitempty"`
	TourId         int64                  `protobuf:"varint,8,opt,name=tourId,proto3" json:"tourId,omitempty"`
}

func (x *TourReviewDto) Reset() {
	*x = TourReviewDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourReviewDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourReviewDto) ProtoMessage() {}

func (x *TourReviewDto) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourReviewDto.ProtoReflect.Descriptor instead.
func (*TourReviewDto) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{3}
}

func (x *TourReviewDto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourReviewDto) GetGrade() float64 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *TourReviewDto) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TourReviewDto) GetTouristId() int64 {
	if x != nil {
		return x.TouristId
	}
	return 0
}

func (x *TourReviewDto) GetAttendanceDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AttendanceDate
	}
	return nil
}

func (x *TourReviewDto) GetReviewDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReviewDate
	}
	return nil
}

func (x *TourReviewDto) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *TourReviewDto) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

type UserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserIdRequest) Reset() {
	*x = UserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdRequest) ProtoMessage() {}

func (x *UserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdRequest.ProtoReflect.Descriptor instead.
func (*UserIdRequest) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{4}
}

func (x *UserIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type TourIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TourIdRequest) Reset() {
	*x = TourIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourIdRequest) ProtoMessage() {}

func (x *TourIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourIdRequest.ProtoReflect.Descriptor instead.
func (*TourIdRequest) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{5}
}

func (x *TourIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{6}
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Response) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TourListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tours []*TourDto `protobuf:"bytes,1,rep,name=tours,proto3" json:"tours,omitempty"`
}

func (x *TourListResponse) Reset() {
	*x = TourListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourListResponse) ProtoMessage() {}

func (x *TourListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourListResponse.ProtoReflect.Descriptor instead.
func (*TourListResponse) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{7}
}

func (x *TourListResponse) GetTours() []*TourDto {
	if x != nil {
		return x.Tours
	}
	return nil
}

var File_tour_proto protoreflect.FileDescriptor

var file_tour_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x04,
	0x0a, 0x07, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a,
	0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x6f, 0x75, 0x72,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x52, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x13, 0x74, 0x6f, 0x75, 0x72, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x44, 0x74, 0x6f, 0x52, 0x13, 0x74, 0x6f, 0x75, 0x72, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x30,
	0x0a, 0x0b, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x44, 0x74, 0x6f, 0x52, 0x0b, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x22, 0xda, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x75, 0x0a,
	0x15, 0x54, 0x6f, 0x75, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x44, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x9d, 0x02, 0x0a, 0x0d, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x75, 0x72, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x75, 0x72, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f,
	0x75, 0x72, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1f, 0x0a,
	0x0d, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x32, 0x0a, 0x10, 0x54, 0x6f,
	0x75, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x05, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x54, 0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x05, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x32, 0x26,
	0x0a, 0x04, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x1e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x08, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x1a, 0x08, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x44, 0x74, 0x6f, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x74, 0x6f, 0x75, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tour_proto_rawDescOnce sync.Once
	file_tour_proto_rawDescData = file_tour_proto_rawDesc
)

func file_tour_proto_rawDescGZIP() []byte {
	file_tour_proto_rawDescOnce.Do(func() {
		file_tour_proto_rawDescData = protoimpl.X.CompressGZIP(file_tour_proto_rawDescData)
	})
	return file_tour_proto_rawDescData
}

var file_tour_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_tour_proto_goTypes = []interface{}{
	(*TourDto)(nil),               // 0: TourDto
	(*TourPointDto)(nil),          // 1: TourPointDto
	(*TourCharacteristicDto)(nil), // 2: TourCharacteristicDto
	(*TourReviewDto)(nil),         // 3: TourReviewDto
	(*UserIdRequest)(nil),         // 4: UserIdRequest
	(*TourIdRequest)(nil),         // 5: TourIdRequest
	(*Response)(nil),              // 6: Response
	(*TourListResponse)(nil),      // 7: TourListResponse
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_tour_proto_depIdxs = []int32{
	8, // 0: TourDto.publishedDateTime:type_name -> google.protobuf.Timestamp
	8, // 1: TourDto.archivedDateTime:type_name -> google.protobuf.Timestamp
	1, // 2: TourDto.tourPoints:type_name -> TourPointDto
	2, // 3: TourDto.tourCharacteristics:type_name -> TourCharacteristicDto
	3, // 4: TourDto.tourReviews:type_name -> TourReviewDto
	8, // 5: TourReviewDto.attendanceDate:type_name -> google.protobuf.Timestamp
	8, // 6: TourReviewDto.reviewDate:type_name -> google.protobuf.Timestamp
	0, // 7: TourListResponse.tours:type_name -> TourDto
	0, // 8: Tour.Create:input_type -> TourDto
	0, // 9: Tour.Create:output_type -> TourDto
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_tour_proto_init() }
func file_tour_proto_init() {
	if File_tour_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tour_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourPointDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourCharacteristicDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourReviewDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tour_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tour_proto_goTypes,
		DependencyIndexes: file_tour_proto_depIdxs,
		MessageInfos:      file_tour_proto_msgTypes,
	}.Build()
	File_tour_proto = out.File
	file_tour_proto_rawDesc = nil
	file_tour_proto_goTypes = nil
	file_tour_proto_depIdxs = nil
}
